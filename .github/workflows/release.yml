# .github/workflows/release.yml

on:
  release:
    types: [created]

jobs:
  release:
    name: release ${{ matrix.target }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          # - target: x86_64-pc-windows-gnu
          #   archive: zip
          - target: x86_64-unknown-linux-musl
            archive: tar.gz tar.xz tar.zst
          - target: x86_64-apple-darwin
            archive: zip
    steps:
      - uses: actions/checkout@v4
      - name: Install ALSA development libraries
        run: sudo apt-get update && sudo apt-get install -y libasound2-dev
      - name: Install Rust target ${{ matrix.BUILD_TARGET }}
        run: rustup target add ${{ matrix.BUILD_TARGET }}
      - name: Compile and release
        uses: rust-build/rust-build.action@v1.4.5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          RUSTTARGET: ${{ matrix.target }}
          ARCHIVE_TYPES: ${{ matrix.archive }}
      - name: Cache Cargo dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Upload release artifacts
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.release.tag_name }}
          files: |
            target/${{ matrix.target }}/pomodorust-${{ github.event.release.tag_name }}.${{ matrix.archive }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Notify release
        run: echo "Release ${{ github.event.release.tag_name }} for ${{ matrix.target }} has been created and uploaded."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Post-release cleanup
        run: |
          echo "Cleaning up build artifacts..."
          rm -rf target/${{ matrix.target }}
          echo "Build artifacts cleaned up."
